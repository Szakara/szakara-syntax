// Language syntax highlighting



.source{



    /*------------*/
   /* JavaScript */
  /*------------*/
  &.js{


    color: @js_blue;


    // Comments.
    span.comment{
      color: @js_pink;
      font-style: italic;

      &.definition{
        color: @js_pink;
      }

    }


    // Declarations (var, function).
    span.storage.var,
    span.storage.function{
      color: @js_source;
      font-style: italic;
    }
    span.meta.method-call{
      color: @js_white;
    }
   


    // Function literals.
    span.support.class,
    span.entity.instance{
      color: @js_blue;
    }
    span.entity.function{
      color: @js_orange;
    }

    span.support.function,
    span.support.constant{
      color: @js_purple;
    }
    span.support.class{
      font-style: normal;
    }


    // Variables.
    span.variable.object,
    span.variable.parameter.function{
      color: @js_blue;
    }


    // Constants.
    span.constant.language{
      color: @js_pink;
    }
    

    // Strings.
    span.string{
      color: @js_green;
    }


    // Numbers.
    span.numeric{
      color: @js_number;
    }


    // Booleans.
    span.constant.language.boolean{
      color: @js_red;
    }


    // Brackets, braces, operators.
    span.brace,
    span.arguments,
    span.terminator{
      color: @js_source;
    }
    span.operator,
    span.curly,{
      color: @js_source;
    }
    span.keyword.operator.new{
      color: @js_var;
    }
    span.keyword.operator.logical{
      color: @js_number;
    }


    // Parameters.
    span.parameters.begin,
    span.parameters.end{
      color: @js_source;
    }
  


    // Delimiters.
    span.meta.delimiter,
    span.meta.brace,
    span.arguments.begin,
    span.arguments.end{
      color: @js_source;
    }


    // Properties.
    span.variable.property{
      color: @js_white;
    }


    // Logic.
    span.keyword.control{
      color: @js_red;
    }


  }



    /*-----*/
   /* CSS */
  /*-----*/
  &.css{


    // Comments
    span.comment{
      color: @css_comment;
    }


    // Selectors.
    span.entity.name{
      color: @css_selector;
    }
    span.entity.attribute-name{
      color: @css_class-id;
    }
    span.punctuation.definition.entity{

    }
    .meta{

      // :hover
      span.pseudo-class{
        color: @css_pseudo;
        font-style: italic;
      }

    } 


    // Property names and values.
    .property-list{

      span.property-name{
        color: @css_property;
      }

      span.property-value{

        color: @css_value;

        span.string.quoted{
          color: @css_string;
        }

      }

    }
    


  }


}




  /*------*/
 /* HTML */
/*------*/
.html{

  color: @html_text;


  // Comments.
  span.comment{
    color: @html_comment;
  }


  // Text.
  span.text{
    color: @html_text;
  }


  // Punctuation.
  span.punctuation.tag{
    color: @html_puncuate;
  }


  // Elements and attributes.
  span.tag.entity{
    color: @html_tag;
  }
  span.attribute-name.entity{
    color: @html_attr;
  }


  // Values.
  span.string{

    color: @html_value;

    span.id{
      color: @html_value;

    }

  }


}




  /*-----*/
 /* PHP */
/*-----*/

.html.php{
  /* color: @php_base; */
}

// Tags.
.embedded.begin.php,
.embedded.end.php{
  color: @php_tag;
}

// Variable.
.variable.php{
  color: @php_var;
}
.storage.modifier.php{
  color: @php_keyword;
}

// Function.
.storage.function.php{
  color: @php_func-dec;
}
.entity.function.php,
.function-call.php{
  color: @php_func;
  font-style: italic;
}
.support.php{
  color: @php_base;
}

// Logic.
.control.php{
  color: @php_logic;
}

// Output ('echo').
.function.output.php{
  color: @php_out;
}

// Strings.
.string.quoted.php span{
  color: @php_string;
}

// Constants, booleans.
.keyword.language.php{
  color: @php_keyword;
}

.constant.php{
  color: @php_boolean;
}
